"use strict";(self.webpackChunkngx_leocare_ui=self.webpackChunkngx_leocare_ui||[]).push([[265],{"./projects/ngx-leocare-ui/src/lib/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,Secondary:()=>Secondary,Warning:()=>Warning,default:()=>button_stories,disable:()=>disable,iconButton:()=>iconButton,iconLabel:()=>iconLabel,large:()=>large,loading:()=>loading,medium:()=>medium,small:()=>small,xs:()=>xs});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var EButtonType,EButtonSize,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");!function(EButtonType){EButtonType.PRIMARY="PRIMARY",EButtonType.SECONDARY="SECONDARY",EButtonType.WARNING="WARNING"}(EButtonType||(EButtonType={})),function(EButtonSize){EButtonSize.XS="XS",EButtonSize.SMALL="SMALL",EButtonSize.MEDIUM="MEDIUM",EButtonSize.LARGE="LARGE"}(EButtonSize||(EButtonSize={}));const BUTTON_TYPE_CONFIG={[EButtonType.PRIMARY]:"bg-purple-55 text-grey-100",[EButtonType.SECONDARY]:"bg-grey-95 text-grey-25",[EButtonType.WARNING]:"bg-red-70 text-grey-100"},BUTTON_SIZE_CONFIG={[EButtonSize.XS]:"font-hole text-s bg-transparent text-purple-55 px-0 hover:underline",[EButtonSize.SMALL]:"font-steven text-s px-5 py-1 h-[30px]",[EButtonSize.MEDIUM]:"font-hole text-s px-5 py-3 h-[44px]",[EButtonSize.LARGE]:"font-hole text-s px-5 py-4 h-[51px]"},BUTTON_ICON_SIZE_CONFIG={[EButtonSize.XS]:"w-3 h-3",[EButtonSize.SMALL]:"w-3.5 h-3.5",[EButtonSize.MEDIUM]:"w-4 h-4",[EButtonSize.LARGE]:"w-4 h-4"},BUTTON_ICON_COLOR_CONFIG={[EButtonType.PRIMARY]:"stroke-grey-100",[EButtonType.SECONDARY]:"stroke-grey-25",[EButtonType.WARNING]:"stroke-grey-100"};let ButtonComponent=class ButtonComponent{constructor(){this.type=EButtonType.PRIMARY,this.size=EButtonSize.MEDIUM,this.isDisable=!1,this.isLoading=!1,this.buttonTypeClasses="",this.buttonSizeClasses="",this.buttonIconSizeClasses="",this.buttonIconColorClasses="",this.EButtonSize=EButtonSize}ngOnInit(){this.buttonTypeClasses=BUTTON_TYPE_CONFIG[this.type],this.buttonSizeClasses=this.isIconButton?"w-9 h-9":BUTTON_SIZE_CONFIG[this.size],this.buttonIconSizeClasses=BUTTON_ICON_SIZE_CONFIG[this.size],this.buttonIconColorClasses=BUTTON_ICON_COLOR_CONFIG[this.type]}get isIconButton(){return!(void 0!==this.text&&""!==this.text||void 0===this.iconPath&&""===this.iconPath)}};ButtonComponent.propDecorators={type:[{type:core.Input}],size:[{type:core.Input}],isDisable:[{type:core.Input}],isLoading:[{type:core.Input}],text:[{type:core.Input}],iconPath:[{type:core.Input}]},ButtonComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"leo-button",template:'<button\n  [disabled]="isDisable"\n  class="hover:shadow-md flex items-center justify-center disabled:bg-grey-95 disabled:text-grey-80 rounded-[50px]"\n  [ngClass]="[buttonTypeClasses, buttonSizeClasses]"\n  [class.hover:shadow-none]="isIconButton || size === EButtonSize.XS"\n  [class.hover:shadow-md]="!(isIconButton || size === EButtonSize.XS)"\n>\n  <ng-container *ngIf="!isLoading; else loader">\n    <img\n      *ngIf="iconPath"\n      [ngClass]="buttonIconSizeClasses"\n      [class.mr-2]="!isIconButton"\n      [src]="iconPath"\n    />\n    <span *ngIf="text" [class.hover:underline]="size === EButtonSize.XS">{{\n      text\n    }}</span>\n  </ng-container>\n</button>\n\n<ng-template #loader>\n  <svg\n    class="animate-spin"\n    [ngClass]="[buttonIconColorClasses, buttonIconSizeClasses]"\n    fill="none"\n    viewBox="0 0 22 22"\n    xmlns="http://www.w3.org/2000/svg"\n  >\n    <path\n      d="M18.6581 17.4961C17.1109 19.3069 14.9681 20.506 12.6155 20.8775C10.2629 21.2491 7.85489 20.7687 5.8249 19.5229C3.79492 18.2771 2.27626 16.3476 1.54225 14.0817C0.808241 11.8159 0.907079 9.36243 1.82098 7.16296C2.73488 4.96348 4.40382 3.16242 6.52744 2.08393C8.65106 1.00543 11.0899 0.720327 13.405 1.27992"\n      stroke-width="1.5"\n    />\n  </svg>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush})],ButtonComponent);const button_stories={title:"UI/Button",component:ButtonComponent,tags:["autodocs"],parameters:{docs:{description:{component:"Button cliquable avec plusieurs Ã©tat"}}},render:args=>({props:{...args}})},Primary={args:{text:"Texte",type:EButtonType.PRIMARY}},Secondary={args:{text:"Texte",type:EButtonType.SECONDARY}},Warning={args:{text:"Texte",type:EButtonType.WARNING}},xs={args:{text:"Texte",size:EButtonSize.XS}},small={args:{text:"Texte",size:EButtonSize.SMALL}},medium={args:{text:"Texte",size:EButtonSize.MEDIUM}},large={args:{text:"Texte",size:EButtonSize.LARGE}},iconLabel={args:{text:"Texte",iconPath:"/assets/img/icons/cross.svg"}},iconButton={args:{iconPath:"/assets/img/icons/cross.svg"}},loading={args:{isLoading:!0}},disable={args:{text:"Texte",isDisable:!0}}}}]);